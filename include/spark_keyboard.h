// spark_keyboard.h
#ifndef SPARK_KEYBOARD_H
#define SPARK_KEYBOARD_H

#include <stdbool.h>


typedef enum {
    SPARK_SCANCODE_UNKNOWN = 0,

    // Letters
    SPARK_SCANCODE_A,
    SPARK_SCANCODE_B,
    SPARK_SCANCODE_C,
    SPARK_SCANCODE_D,
    SPARK_SCANCODE_E,
    SPARK_SCANCODE_F,
    SPARK_SCANCODE_G,
    SPARK_SCANCODE_H,
    SPARK_SCANCODE_I,
    SPARK_SCANCODE_J,
    SPARK_SCANCODE_K,
    SPARK_SCANCODE_L,
    SPARK_SCANCODE_M,
    SPARK_SCANCODE_N,
    SPARK_SCANCODE_O,
    SPARK_SCANCODE_P,
    SPARK_SCANCODE_Q,
    SPARK_SCANCODE_R,
    SPARK_SCANCODE_S,
    SPARK_SCANCODE_T,
    SPARK_SCANCODE_U,
    SPARK_SCANCODE_V,
    SPARK_SCANCODE_W,
    SPARK_SCANCODE_X,
    SPARK_SCANCODE_Y,
    SPARK_SCANCODE_Z,

    // Numbers (main keyboard)
    SPARK_SCANCODE_1,
    SPARK_SCANCODE_2,
    SPARK_SCANCODE_3,
    SPARK_SCANCODE_4,
    SPARK_SCANCODE_5,
    SPARK_SCANCODE_6,
    SPARK_SCANCODE_7,
    SPARK_SCANCODE_8,
    SPARK_SCANCODE_9,
    SPARK_SCANCODE_0,

    // Function keys
    SPARK_SCANCODE_F1,
    SPARK_SCANCODE_F2,
    SPARK_SCANCODE_F3,
    SPARK_SCANCODE_F4,
    SPARK_SCANCODE_F5,
    SPARK_SCANCODE_F6,
    SPARK_SCANCODE_F7,
    SPARK_SCANCODE_F8,
    SPARK_SCANCODE_F9,
    SPARK_SCANCODE_F10,
    SPARK_SCANCODE_F11,
    SPARK_SCANCODE_F12,
    SPARK_SCANCODE_F13,
    SPARK_SCANCODE_F14,
    SPARK_SCANCODE_F15,
    SPARK_SCANCODE_F16,
    SPARK_SCANCODE_F17,
    SPARK_SCANCODE_F18,
    SPARK_SCANCODE_F19,
    SPARK_SCANCODE_F20,
    SPARK_SCANCODE_F21,
    SPARK_SCANCODE_F22,
    SPARK_SCANCODE_F23,
    SPARK_SCANCODE_F24,

    // Navigation/Editing
    SPARK_SCANCODE_RETURN,
    SPARK_SCANCODE_ESCAPE,
    SPARK_SCANCODE_BACKSPACE,
    SPARK_SCANCODE_TAB,
    SPARK_SCANCODE_SPACE,
    SPARK_SCANCODE_INSERT,
    SPARK_SCANCODE_HOME,
    SPARK_SCANCODE_PAGEUP,
    SPARK_SCANCODE_DELETE,
    SPARK_SCANCODE_END,
    SPARK_SCANCODE_PAGEDOWN,

    // Arrow keys
    SPARK_SCANCODE_RIGHT,
    SPARK_SCANCODE_LEFT,
    SPARK_SCANCODE_DOWN,
    SPARK_SCANCODE_UP,

    // Keypad
    SPARK_SCANCODE_NUMLOCK,
    SPARK_SCANCODE_KP_DIVIDE,
    SPARK_SCANCODE_KP_MULTIPLY,
    SPARK_SCANCODE_KP_MINUS,
    SPARK_SCANCODE_KP_PLUS,
    SPARK_SCANCODE_KP_ENTER,
    SPARK_SCANCODE_KP_1,
    SPARK_SCANCODE_KP_2,
    SPARK_SCANCODE_KP_3,
    SPARK_SCANCODE_KP_4,
    SPARK_SCANCODE_KP_5,
    SPARK_SCANCODE_KP_6,
    SPARK_SCANCODE_KP_7,
    SPARK_SCANCODE_KP_8,
    SPARK_SCANCODE_KP_9,
    SPARK_SCANCODE_KP_0,
    SPARK_SCANCODE_KP_PERIOD,

    // Modifiers and special keys
    SPARK_SCANCODE_LCTRL,
    SPARK_SCANCODE_LSHIFT,
    SPARK_SCANCODE_LALT,
    SPARK_SCANCODE_LGUI,
    SPARK_SCANCODE_RCTRL,
    SPARK_SCANCODE_RSHIFT,
    SPARK_SCANCODE_RALT,
    SPARK_SCANCODE_RGUI,
    SPARK_SCANCODE_MODE,
    SPARK_SCANCODE_CAPSLOCK,
    SPARK_SCANCODE_SCROLLLOCK,

    // Punctuation and symbols
    SPARK_SCANCODE_MINUS,
    SPARK_SCANCODE_EQUALS,
    SPARK_SCANCODE_LEFTBRACKET,
    SPARK_SCANCODE_RIGHTBRACKET,
    SPARK_SCANCODE_BACKSLASH,
    SPARK_SCANCODE_SEMICOLON,
    SPARK_SCANCODE_APOSTROPHE,
    SPARK_SCANCODE_GRAVE,
    SPARK_SCANCODE_COMMA,
    SPARK_SCANCODE_PERIOD,
    SPARK_SCANCODE_SLASH,

    // International/Language
    SPARK_SCANCODE_NONUSBACKSLASH,
    SPARK_SCANCODE_INTERNATIONAL1,
    SPARK_SCANCODE_INTERNATIONAL2,
    SPARK_SCANCODE_INTERNATIONAL3,
    SPARK_SCANCODE_INTERNATIONAL4,
    SPARK_SCANCODE_INTERNATIONAL5,
    SPARK_SCANCODE_INTERNATIONAL6,
    SPARK_SCANCODE_INTERNATIONAL7,
    SPARK_SCANCODE_INTERNATIONAL8,
    SPARK_SCANCODE_INTERNATIONAL9,
    SPARK_SCANCODE_LANG1,
    SPARK_SCANCODE_LANG2,
    SPARK_SCANCODE_LANG3,
    SPARK_SCANCODE_LANG4,
    SPARK_SCANCODE_LANG5,

    // System/Media keys
    SPARK_SCANCODE_MUTE,
    SPARK_SCANCODE_VOLUMEUP,
    SPARK_SCANCODE_VOLUMEDOWN,
    SPARK_SCANCODE_AUDIONEXT,
    SPARK_SCANCODE_AUDIOPREV,
    SPARK_SCANCODE_AUDIOSTOP,
    SPARK_SCANCODE_AUDIOPLAY,
    SPARK_SCANCODE_AUDIOMUTE,
    
    SPARK_SCANCODE_COUNT
} SparkScancode;

// Core functions
void spark_keyboard_init(void);
void spark_keyboard_shutdown(void);
void spark_keyboard_update(void);

// Key state functions
bool spark_keyboard_is_down(SparkScancode key);
bool spark_keyboard_is_scancode_down(SparkScancode scancode);

// Key repeat functions
void spark_keyboard_set_key_repeat(bool enable);
bool spark_keyboard_has_key_repeat(void);
void spark_keyboard_get_key_repeat(int* delay, int* interval);

// Text input functions
void spark_keyboard_set_text_input(bool enable);
bool spark_keyboard_has_text_input(void);
bool spark_keyboard_has_screen_keyboard(void);

#endif // SPARK_KEYBOARD_H
